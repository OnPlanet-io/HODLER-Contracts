{
  "address": "0x6dE24Ad8312871ba9D06db51F000F344E9a7A476",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_giveAwayManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "PMRewardDistributor__CONTRACT_IS_PAUSED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PMRewardDistributor__NOT_ENOUGH_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PMRewardDistributor__Not_Authorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "RewardApplied",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "campaign",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "amountUSD",
          "type": "uint8"
        },
        {
          "internalType": "enum PMLibrary.InvestmentType",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "applyRewardToACampaing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "action",
          "type": "bool"
        }
      ],
      "name": "changePauseStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "prizeUSD",
          "type": "uint8"
        }
      ],
      "name": "distributeReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGiveAwayManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPriceOfOneUSD",
      "outputs": [
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalRewardDistributed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_giveAwayManager",
          "type": "address"
        }
      ],
      "name": "updateGiveAwayManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "updatePriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "_uniswapV2Router",
          "type": "address"
        }
      ],
      "name": "updateRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6ff2ff76bc4ba685bd7a6830c4599a16eea62e5907ed6d85503bee09813079ba",
  "receipt": {
    "to": null,
    "from": "0x6Fb08a7d994570a16322c1eA2d8D9936719761B9",
    "contractAddress": "0x6dE24Ad8312871ba9D06db51F000F344E9a7A476",
    "transactionIndex": 0,
    "gasUsed": "1282042",
    "logsBloom": "0x
    "blockHash": "0x63c8c093eddab3106e63a18ca4968a793dee0b47e38fb3cf965e124f5d9e965e",
    "transactionHash": "0x6ff2ff76bc4ba685bd7a6830c4599a16eea62e5907ed6d85503bee09813079ba",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3980416,
        "transactionHash": "0x6ff2ff76bc4ba685bd7a6830c4599a16eea62e5907ed6d85503bee09813079ba",
        "address": "0x6dE24Ad8312871ba9D06db51F000F344E9a7A476",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006fb08a7d994570a16322c1ea2d8d9936719761b9"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x63c8c093eddab3106e63a18ca4968a793dee0b47e38fb3cf965e124f5d9e965e"
      }
    ],
    "blockNumber": 3980416,
    "cumulativeGasUsed": "1282042",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x49EB9ac3e28a22A90D73e3F7B27Bc76628b2442B"
  ],
  "numDeployments": 1,
  "solcInputHash": "0fb1101042a11c55763c576911848678",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_giveAwayManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PMRewardDistributor__CONTRACT_IS_PAUSED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PMRewardDistributor__NOT_ENOUGH_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PMRewardDistributor__Not_Authorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"RewardApplied\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"campaign\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"amountUSD\",\"type\":\"uint8\"},{\"internalType\":\"enum PMLibrary.InvestmentType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"applyRewardToACampaing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"action\",\"type\":\"bool\"}],\"name\":\"changePauseStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"prizeUSD\",\"type\":\"uint8\"}],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGiveAwayManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPriceOfOneUSD\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalRewardDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_giveAwayManager\",\"type\":\"address\"}],\"name\":\"updateGiveAwayManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"updatePriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"_uniswapV2Router\",\"type\":\"address\"}],\"name\":\"updateRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Planetmoon/PMRewardDistributor.sol\":\"PMRewardDistributor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Planetmoon/PMRewardDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport {PMLibrary} from \\\"../library/PMLibrary.sol\\\";\\r\\nimport {IUniswapV2Router02} from \\\"../interfaces/IUniswapV2Router02.sol\\\";\\r\\nimport {IRewardCampaign} from \\\"../interfaces/IRewardCampaign.sol\\\";\\r\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport {PriceFeed} from \\\"./PriceFeed.sol\\\";\\r\\nimport {SwapETHForTokens} from \\\"./SwapETHForTokens.sol\\\";\\r\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport {IUniswapV2Router02} from \\\"../interfaces/IUniswapV2Router02.sol\\\";\\r\\n\\r\\n// import \\\"hardhat/console.sol\\\";\\r\\n\\r\\ncontract PMRewardDistributor is Ownable, PriceFeed, SwapETHForTokens {\\r\\n\\r\\n    error PMRewardDistributor__NOT_ENOUGH_BALANCE();\\r\\n    error PMRewardDistributor__CONTRACT_IS_PAUSED();\\r\\n    error PMRewardDistributor__Not_Authorized();\\r\\n\\r\\n    address private s_giveAwayManager;\\r\\n    bool private s_isPaused = true;\\r\\n    uint256 private s_totalRewardDistributed;\\r\\n\\r\\n    event Received(address, uint);\\r\\n    event RewardApplied(address, address, uint256, uint8);\\r\\n\\r\\n    constructor(address _giveAwayManager) {\\r\\n        s_giveAwayManager = _giveAwayManager;\\r\\n    }\\r\\n\\r\\n    modifier onlyGiveAwayManager() {\\r\\n        if(msg.sender != s_giveAwayManager){\\r\\n            revert PMRewardDistributor__Not_Authorized();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function getGiveAwayManager() external view returns (address) {\\r\\n        return s_giveAwayManager;\\r\\n    }\\r\\n\\r\\n    function getTotalRewardDistributed() external view returns (uint256) {\\r\\n        return s_totalRewardDistributed;\\r\\n    }\\r\\n\\r\\n    function isPaused() external view returns (bool) {\\r\\n        return s_isPaused;\\r\\n    }\\r\\n\\r\\n    function distributeReward(\\r\\n        address winner,\\r\\n        uint8 prizeUSD\\r\\n    ) external onlyGiveAwayManager {\\r\\n        if (s_isPaused) {\\r\\n            revert PMRewardDistributor__CONTRACT_IS_PAUSED();\\r\\n        }\\r\\n\\r\\n        uint256 priceOfOneUSD = uint256(getLatestPriceOfOneUSD());\\r\\n\\r\\n        uint256 prizeBNB = priceOfOneUSD * prizeUSD;\\r\\n        s_totalRewardDistributed += prizeBNB;\\r\\n\\r\\n        uint256 totalBalance = address(this).balance;\\r\\n\\r\\n        if (totalBalance < prizeBNB) {\\r\\n            revert PMRewardDistributor__NOT_ENOUGH_BALANCE();\\r\\n        }\\r\\n        payable(winner).transfer(prizeBNB);\\r\\n    }\\r\\n\\r\\n    function applyRewardToACampaing(\\r\\n        address campaign,\\r\\n        address user,\\r\\n        uint8 amountUSD,\\r\\n        PMLibrary.InvestmentType _type\\r\\n    ) external onlyGiveAwayManager {\\r\\n        if (s_isPaused) {\\r\\n            revert PMRewardDistributor__CONTRACT_IS_PAUSED();\\r\\n        }\\r\\n\\r\\n        uint256 priceOfOneUSD = uint256(getLatestPriceOfOneUSD());\\r\\n\\r\\n        uint256 amount = priceOfOneUSD * amountUSD;\\r\\n        s_totalRewardDistributed += amount;\\r\\n\\r\\n        uint256 totalBalance = address(this).balance;\\r\\n\\r\\n        if (totalBalance < amount) {\\r\\n            revert PMRewardDistributor__NOT_ENOUGH_BALANCE();\\r\\n        }\\r\\n\\r\\n        // find the token of the campaign\\r\\n        PMLibrary.PoolFullInfo memory poolFullInfo = IRewardCampaign(campaign)\\r\\n            .getProjectInfo();\\r\\n        address tokenAddress = poolFullInfo.projectInfo.tokenAddress;\\r\\n\\r\\n        // Buy tokens from open market\\r\\n        uint256 boughtTokens = swapETHForTokens(\\r\\n            tokenAddress,\\r\\n            address(this),\\r\\n            amount\\r\\n        );\\r\\n\\r\\n        // Approve tokens to the investment pool\\r\\n        IERC20(tokenAddress).approve(campaign, boughtTokens);\\r\\n\\r\\n        // Invest tokens on uers behalf\\r\\n        IRewardCampaign(campaign).investTokens(user, boughtTokens, _type);\\r\\n\\r\\n        emit RewardApplied(campaign, user, boughtTokens, uint8(_type));\\r\\n    }\\r\\n\\r\\n    /* Admin Functions */\\r\\n\\r\\n    function emergencyWithdraw() external onlyOwner {\\r\\n        uint256 totalBalance = address(this).balance;\\r\\n        require(totalBalance > 0, \\\"No balance avaialble for withdraw\\\");\\r\\n        payable(owner()).transfer(totalBalance);\\r\\n    }\\r\\n\\r\\n    function changePauseStatus(bool action) external onlyOwner {\\r\\n        s_isPaused = action;\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n    function updateGiveAwayManager(\\r\\n        address _giveAwayManager\\r\\n    ) external onlyOwner {\\r\\n        s_giveAwayManager = _giveAwayManager;\\r\\n    }\\r\\n\\r\\n    function updateRouter(\\r\\n        IUniswapV2Router02 _uniswapV2Router\\r\\n    ) public onlyOwner {\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n    }\\r\\n\\r\\n    function updatePriceFeed(\\r\\n        AggregatorV3Interface _priceFeed\\r\\n    ) public onlyOwner {\\r\\n        priceFeed = _priceFeed;\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        emit Received(msg.sender, msg.value);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x94049880cc265c3d9660d7c9a0787b502639674f8d4f067f54ac24a63a29b812\",\"license\":\"MIT\"},\"contracts/Planetmoon/PriceFeed.sol\":{\"content\":\"/**\\r\\n* Network: Goerli\\r\\n* Aggregator: ETH/USD\\r\\n* Address: 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\r\\n*/\\r\\n\\r\\n\\r\\n/**\\r\\n* Network: BNB Chain Mainnet\\r\\n* Aggregator: BNB/USD\\r\\n* Address: 0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\ncontract PriceFeed {\\r\\n\\r\\n    // AggregatorV3Interface internal priceFeed = AggregatorV3Interface(0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE); // BNB Chain Mainnet BNB/USD\\r\\n    AggregatorV3Interface internal priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);  // Sepolia ETH/USD\\r\\n\\r\\n    function getLatestPriceOfOneUSD() public view returns (int price) {\\r\\n\\r\\n        // this is the price of 1 Eth in USDs  => 1 ETh = price USDs\\r\\n        // Find price of 1 USD => 1 USD = 1/price ETH\\r\\n\\r\\n        (, price,,,) = priceFeed.latestRoundData();\\r\\n        int ONE_ETH = 1 ether;\\r\\n        price = (ONE_ETH * 10**8)/price;\\r\\n\\r\\n        // price = int(756881949122395); \\r\\n\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0xe9ab82ea8da4f030153126d3e42e1cf8ff5c1a274553cdcd6f756950b5574fa8\",\"license\":\"MIT\"},\"contracts/Planetmoon/SwapETHForTokens.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\n// import {} \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport {IUniswapV2Router02} from \\\"../interfaces/IUniswapV2Router02.sol\\\";\\r\\n\\r\\ncontract SwapETHForTokens {\\r\\n\\r\\n    // IUniswapV2Router02 public uniswapV2Router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E); //Pancakeswap router mainnet - BSC\\r\\n    // IUniswapV2Router02 public uniswapV2Router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D); //Uniswap router goerli testnet - ETH\\r\\n    IUniswapV2Router02 public uniswapV2Router = IUniswapV2Router02(0xB26B2De65D07eBB5E54C7F6282424D3be670E1f0); //Uniswap router sepolia testnet - ETH\\r\\n\\r\\n    function swapETHForTokens(\\r\\n        address tokenAddress,\\r\\n        address toAddress,\\r\\n        uint256 amount\\r\\n    ) internal returns (uint256) {\\r\\n        // generate the uniswap pair path of token -> weth\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = uniswapV2Router.WETH();\\r\\n        path[1] = tokenAddress;\\r\\n\\r\\n        uint[] memory amounts = uniswapV2Router.swapExactETHForTokens{\\r\\n            value: amount\\r\\n        }(\\r\\n            0, // accept any amount of Tokens\\r\\n            path,\\r\\n            toAddress, // The contract\\r\\n            block.timestamp + 500\\r\\n        );\\r\\n        uint256 boughtTokens = amounts[amounts.length - 1];\\r\\n        return boughtTokens;\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x529c11382fd61f97ee3afee3aafef02ebae674d69a73bf59766a7d3b9b5e1065\",\"license\":\"MIT\"},\"contracts/interfaces/IRewardCampaign.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport {PMLibrary} from \\\"../library/PMLibrary.sol\\\";\\r\\n\\r\\ninterface IRewardCampaign {\\r\\n    function investTokens(address onBehalf, uint256 amount, PMLibrary.InvestmentType _type) external;\\r\\n    function claimTokensAndReward(uint256 _tokenId) external;  \\r\\n    function getTokenData(uint256 _tokenId) external view returns(PMLibrary.TokenData memory);\\r\\n    function getProjectInfo() external view returns ( PMLibrary.PoolFullInfo memory poolFullInfo);\\r\\n}\",\"keccak256\":\"0xeaf7f61156374ea9d3d1d4349e7f1c28307e438a42d2310ab1df8312bf397544\",\"license\":\"MIT\"},\"contracts/interfaces/IUniswapV2Router01.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\ninterface IUniswapV2Router01 {\\r\\n    function factory() external pure returns (address);\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint amountADesired,\\r\\n        uint amountBDesired,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB, uint liquidity);\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint amountTokenDesired,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint liquidity,\\r\\n        uint amountAMin,\\r\\n        uint amountBMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountA, uint amountB);\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountToken, uint amountETH);\\r\\n    function swapExactTokensForTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapTokensForExactTokens(\\r\\n        uint amountOut,\\r\\n        uint amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint[] memory amounts);\\r\\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        payable\\r\\n        returns (uint[] memory amounts);\\r\\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        returns (uint[] memory amounts);\\r\\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        returns (uint[] memory amounts);\\r\\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\\r\\n        external\\r\\n        payable\\r\\n        returns (uint[] memory amounts);\\r\\n\\r\\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\\r\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\\r\\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\\r\\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\\r\\n}\\r\\n\",\"keccak256\":\"0x265c32a069532ab22c1ba8dd561463fde89d09b281473d89be27255066d20938\",\"license\":\"MIT\"},\"contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport {IUniswapV2Router01} from './IUniswapV2Router01.sol';\\r\\n\\r\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\r\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external returns (uint amountETH);\\r\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint liquidity,\\r\\n        uint amountTokenMin,\\r\\n        uint amountETHMin,\\r\\n        address to,\\r\\n        uint deadline,\\r\\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\\r\\n    ) external returns (uint amountETH);\\r\\n\\r\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external payable;\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint amountIn,\\r\\n        uint amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint deadline\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x6e8f01dd531f3da21e13755484d3c6361c4197f5433561b4d6b8f9bfa75bd357\",\"license\":\"MIT\"},\"contracts/library/PMLibrary.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nlibrary PMLibrary {\\r\\n    \\r\\n    enum ProfileType {\\r\\n        NONE,\\r\\n        TEAM,\\r\\n        USER\\r\\n    }\\r\\n\\r\\n    enum InvestmentType {\\r\\n        ONE_MONTH,\\r\\n        THREE_MONTH,\\r\\n        SIX_MONTH,\\r\\n        NINE_MONTH,\\r\\n        TWELVE_MONTH\\r\\n    }\\r\\n\\r\\n    enum MembershipCategories {\\r\\n        MEMBER,\\r\\n        TEAM\\r\\n    }\\r\\n\\r\\n    enum ClaimCategories{\\r\\n        REWARD_0pc,\\r\\n        REWARD_30pc,\\r\\n        REWARD_50pc,\\r\\n        REWARD_100pc\\r\\n    }\\r\\n\\r\\n    enum CampaignCategories {\\r\\n        SILVER,\\r\\n        GOLD,\\r\\n        DIAMOND\\r\\n    }\\r\\n\\r\\n    enum FeesType {\\r\\n        USD,\\r\\n        BNB\\r\\n    }\\r\\n\\r\\n\\r\\n    struct PoolInfo {\\r\\n        uint256 poolId;\\r\\n        address poolAddress;\\r\\n        uint256 remainingPool;\\r\\n        uint256 totalTokensInvested;\\r\\n        uint256 totalParicipants;\\r\\n        uint256 tokenCounter;\\r\\n        address poolOwner;\\r\\n    }\\r\\n\\r\\n    struct ProjectInfo {\\r\\n        CampaignCategories category;\\r\\n        string projectName;\\r\\n        string projectSymbol;\\r\\n        address tokenAddress;\\r\\n        uint8 tokenDecimals;\\r\\n        string tokenSymbol;\\r\\n        ProfileType profileType;\\r\\n        uint256 profileId;\\r\\n    }\\r\\n\\r\\n    struct RewardPoolInfo {\\r\\n        uint256 startedAt;\\r\\n        uint256 poolAmount;\\r\\n    }\\r\\n\\r\\n    struct NFTData {\\r\\n        string image_1_months;\\r\\n        string image_3_months;\\r\\n        string image_6_months;\\r\\n        string image_9_months;\\r\\n        string image_12_months;\\r\\n        uint8 APY_1_months;\\r\\n        uint8 APY_3_months;\\r\\n        uint8 APY_6_months;\\r\\n        uint8 APY_9_months;\\r\\n        uint8 APY_12_months;\\r\\n    }\\r\\n\\r\\n    struct TokenData {\\r\\n        address poolAddress;\\r\\n        uint256 poolId;\\r\\n        uint256 tokenInvested;\\r\\n        address tokenAddress;\\r\\n        address owner;\\r\\n        address creator;\\r\\n        uint256 tokenId;\\r\\n        string tokenUri;\\r\\n        InvestmentType investmentType;\\r\\n        uint256 investmentTime;\\r\\n        uint256 unlockTime;\\r\\n        uint256 expectedReward;\\r\\n        bool isUnskated;\\r\\n        uint256 redeemedReward;\\r\\n        uint8 pcReceived;\\r\\n    }\\r\\n\\r\\n    struct PoolFullInfo {\\r\\n        PoolInfo poolInfo;\\r\\n        ProjectInfo projectInfo;\\r\\n        RewardPoolInfo rewardPoolInfo;\\r\\n        NFTData nftData;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xfe61cedbea1529220a58c89e0233d8fce48b12129422d53530c6f4e482ecf1ff\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600180546001600160a01b031990811673694aa1769357215de4fac081bf1f309adc325306179091556002805490911673b26b2de65d07ebb5e54c7f6282424d3be670e1f01790556003805460ff60a01b1916600160a01b17905534801561006b57600080fd5b506040516115c63803806115c683398101604081905261008a91610108565b610093336100b8565b600380546001600160a01b0319166001600160a01b0392909216919091179055610138565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561011a57600080fd5b81516001600160a01b038116811461013157600080fd5b9392505050565b61147f806101476000396000f3fe6080604052600436106100ec5760003560e01c8063715018a61161008a578063c851cc3211610059578063c851cc32146102a2578063d478c0e0146102c2578063db2e21bc146102e2578063f2fde38b146102f757600080fd5b8063715018a6146102255780638da5cb5b1461023a57806395877f7814610258578063b187bd261461027857600080fd5b80633424b8ce116100c65780633424b8ce146101b25780633b146163146101d2578063442f1f65146101f057806359199c6c1461021057600080fd5b806302a64a4b146101305780631694505e14610158578063190f5ded1461019057600080fd5b3661012b57604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874910160405180910390a1005b600080fd5b34801561013c57600080fd5b50610145610317565b6040519081526020015b60405180910390f35b34801561016457600080fd5b50600254610178906001600160a01b031681565b6040516001600160a01b03909116815260200161014f565b34801561019c57600080fd5b506101b06101ab366004610b69565b6103b7565b005b3480156101be57600080fd5b506101b06101cd366004610bd7565b610632565b3480156101de57600080fd5b506003546001600160a01b0316610178565b3480156101fc57600080fd5b506101b061020b366004610bfb565b610658565b34801561021c57600080fd5b50600454610145565b34801561023157600080fd5b506101b0610682565b34801561024657600080fd5b506000546001600160a01b0316610178565b34801561026457600080fd5b506101b0610273366004610bfb565b610696565b34801561028457600080fd5b50600354600160a01b900460ff16604051901515815260200161014f565b3480156102ae57600080fd5b506101b06102bd366004610bfb565b6106c0565b3480156102ce57600080fd5b506101b06102dd366004610c18565b6106ea565b3480156102ee57600080fd5b506101b06107d5565b34801561030357600080fd5b506101b0610312366004610bfb565b610877565b60015460408051633fabe5a360e21b815290516000926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa158015610361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103859190610c70565b50919350670de0b6b3a764000092508391506103a79050826305f5e100610cd6565b6103b19190610d0c565b91505090565b6003546001600160a01b031633146103e25760405163e51e640160e01b815260040160405180910390fd5b600354600160a01b900460ff161561040d57604051631d7eb59760e31b815260040160405180910390fd5b6000610417610317565b9050600061042860ff851683610d48565b9050806004600082825461043c9190610d5f565b909155504790508181101561046457604051638aa27f2b60e01b815260040160405180910390fd5b6000876001600160a01b03166367c897fe6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104a4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104cc919081019061115f565b60208101516060015190915060006104e58230876108f0565b60405163095ea7b360e01b81526001600160a01b038c81166004830152602482018390529192509083169063095ea7b3906044016020604051808303816000875af1158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c919061127d565b5060405163aad012e760e01b81526001600160a01b038b169063aad012e79061058d908c9085908c906004016112b0565b600060405180830381600087803b1580156105a757600080fd5b505af11580156105bb573d6000803e3d6000fd5b505050507f4d7cc17f866386d5d89d8e5590222a32b2f868de90f085e211d0643cc6d8fa5d8a8a838a60048111156105f5576105f561129a565b604080516001600160a01b0395861681529490931660208501529183015260ff16606082015260800160405180910390a150505050505050505050565b61063a610a9b565b60038054911515600160a01b0260ff60a01b19909216919091179055565b610660610a9b565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b61068a610a9b565b6106946000610af5565b565b61069e610a9b565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6106c8610a9b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031633146107155760405163e51e640160e01b815260040160405180910390fd5b600354600160a01b900460ff161561074057604051631d7eb59760e31b815260040160405180910390fd5b600061074a610317565b9050600061075b60ff841683610d48565b9050806004600082825461076f9190610d5f565b909155504790508181101561079757604051638aa27f2b60e01b815260040160405180910390fd5b6040516001600160a01b0386169083156108fc029084906000818181858888f193505050501580156107cd573d6000803e3d6000fd5b505050505050565b6107dd610a9b565b478061083a5760405162461bcd60e51b815260206004820152602160248201527f4e6f2062616c616e63652061766169616c626c6520666f7220776974686472616044820152607760f81b60648201526084015b60405180910390fd5b600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610873573d6000803e3d6000fd5b5050565b61087f610a9b565b6001600160a01b0381166108e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610831565b6108ed81610af5565b50565b604080516002808252606082018352600092839291906020830190803683375050600254604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa15801561095e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098291906112f3565b8160008151811061099557610995611310565b60200260200101906001600160a01b031690816001600160a01b03168152505084816001815181106109c9576109c9611310565b6001600160a01b03928316602091820292909201015260025460009116637ff36ab5858385896109fb426101f4610d5f565b6040518663ffffffff1660e01b8152600401610a1a9493929190611326565b60006040518083038185885af1158015610a38573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052610a619190810190611390565b905060008160018351610a749190611436565b81518110610a8457610a84611310565b602002602001015190508093505050509392505050565b6000546001600160a01b031633146106945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610831565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146108ed57600080fd5b60ff811681146108ed57600080fd5b60008060008060808587031215610b7f57600080fd5b8435610b8a81610b45565b93506020850135610b9a81610b45565b92506040850135610baa81610b5a565b9150606085013560058110610bbe57600080fd5b939692955090935050565b80151581146108ed57600080fd5b600060208284031215610be957600080fd5b8135610bf481610bc9565b9392505050565b600060208284031215610c0d57600080fd5b8135610bf481610b45565b60008060408385031215610c2b57600080fd5b8235610c3681610b45565b91506020830135610c4681610b5a565b809150509250929050565b805169ffffffffffffffffffff81168114610c6b57600080fd5b919050565b600080600080600060a08688031215610c8857600080fd5b610c9186610c51565b9450602086015193506040860151925060608601519150610cb460808701610c51565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b80820260008212600160ff1b84141615610cf257610cf2610cc0565b8181058314821517610d0657610d06610cc0565b92915050565b600082610d2957634e487b7160e01b600052601260045260246000fd5b600160ff1b821460001984141615610d4357610d43610cc0565b500590565b8082028115828204841417610d0657610d06610cc0565b80820180821115610d0657610d06610cc0565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610dac57610dac610d72565b60405290565b604051610140810167ffffffffffffffff81118282101715610dac57610dac610d72565b6040516080810167ffffffffffffffff81118282101715610dac57610dac610d72565b60405160e0810167ffffffffffffffff81118282101715610dac57610dac610d72565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e4557610e45610d72565b604052919050565b8051610c6b81610b45565b805160038110610c6b57600080fd5b600082601f830112610e7857600080fd5b815167ffffffffffffffff811115610e9257610e92610d72565b6020610ea6601f8301601f19168201610e1c565b8281528582848701011115610eba57600080fd5b60005b83811015610ed8578581018301518282018401528201610ebd565b506000928101909101919091529392505050565b8051610c6b81610b5a565b60006101008284031215610f0a57600080fd5b610f12610d88565b9050610f1d82610e58565b8152602082015167ffffffffffffffff80821115610f3a57600080fd5b610f4685838601610e67565b60208401526040840151915080821115610f5f57600080fd5b610f6b85838601610e67565b6040840152610f7c60608501610e4d565b6060840152610f8d60808501610eec565b608084015260a0840151915080821115610fa657600080fd5b50610fb384828501610e67565b60a083015250610fc560c08301610e58565b60c082015260e082015160e082015292915050565b600060408284031215610fec57600080fd5b6040516040810181811067ffffffffffffffff8211171561100f5761100f610d72565b604052825181526020928301519281019290925250919050565b6000610140828403121561103c57600080fd5b611044610db2565b9050815167ffffffffffffffff8082111561105e57600080fd5b61106a85838601610e67565b8352602084015191508082111561108057600080fd5b61108c85838601610e67565b602084015260408401519150808211156110a557600080fd5b6110b185838601610e67565b604084015260608401519150808211156110ca57600080fd5b6110d685838601610e67565b606084015260808401519150808211156110ef57600080fd5b506110fc84828501610e67565b60808301525061110e60a08301610eec565b60a082015261111f60c08301610eec565b60c082015261113060e08301610eec565b60e0820152610100611143818401610eec565b90820152610120611155838201610eec565b9082015292915050565b60006020828403121561117157600080fd5b815167ffffffffffffffff8082111561118957600080fd5b9083019081850361016081121561119f57600080fd5b6111a7610dd6565b60e08212156111b557600080fd5b6111bd610df9565b91508351825260208401516111d181610b45565b8060208401525060408401516040830152606084015160608301526080840151608083015260a084015160a083015260c084015161120e81610b45565b60c083015290815260e0830151908282111561122957600080fd5b61123587838601610ef7565b6020820152611248876101008601610fda565b604082015261014084015191508282111561126257600080fd5b61126e87838601611029565b60608201529695505050505050565b60006020828403121561128f57600080fd5b8151610bf481610bc9565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03841681526020810183905260608101600583106112e557634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b60006020828403121561130557600080fd5b8151610bf481610b45565b634e487b7160e01b600052603260045260246000fd5b600060808201868352602060808185015281875180845260a086019150828901935060005b818110156113705784516001600160a01b03168352938301939183019160010161134b565b50506001600160a01b039690961660408501525050506060015292915050565b600060208083850312156113a357600080fd5b825167ffffffffffffffff808211156113bb57600080fd5b818501915085601f8301126113cf57600080fd5b8151818111156113e1576113e1610d72565b8060051b91506113f2848301610e1c565b818152918301840191848101908884111561140c57600080fd5b938501935b8385101561142a57845182529385019390850190611411565b98975050505050505050565b81810381811115610d0657610d06610cc056fea2646970667358221220f323e43e1fbf16222589307d7e3b8236069a64dd01089c60562185e2110bbf4464736f6c63430008120033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/Planetmoon/PMRewardDistributor.sol:PMRewardDistributor",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2022,
        "contract": "contracts/Planetmoon/PMRewardDistributor.sol:PMRewardDistributor",
        "label": "priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 2061,
        "contract": "contracts/Planetmoon/PMRewardDistributor.sol:PMRewardDistributor",
        "label": "uniswapV2Router",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IUniswapV2Router02)2559"
      },
      {
        "astId": 1684,
        "contract": "contracts/Planetmoon/PMRewardDistributor.sol:PMRewardDistributor",
        "label": "s_giveAwayManager",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1687,
        "contract": "contracts/Planetmoon/PMRewardDistributor.sol:PMRewardDistributor",
        "label": "s_isPaused",
        "offset": 20,
        "slot": "3",
        "type": "t_bool"
      },
      {
        "astId": 1689,
        "contract": "contracts/Planetmoon/PMRewardDistributor.sol:PMRewardDistributor",
        "label": "s_totalRewardDistributed",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_contract(IUniswapV2Router02)2559": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router02",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}